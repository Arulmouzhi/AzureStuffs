--# LOGINS'S -- need to be created at master db
IF NOT EXISTS (SELECT [name] FROM [sys].[sql_logins] WHERE [type] = 'S' AND [name] = 'arulmouzhi') 
	BEGIN
		CREATE LOGIN arulmouzhi WITH PASSWORD ='User@12345a' ; --dummy password
	END
ELSE
	BEGIN 
		SELECT 'Login_Name Already exists' AS [STATUS] ;
	END;

--## USER'S -- need to be created at particular db
IF NOT EXISTS ( SELECT [name] FROM [sys].[database_principals] WHERE [type] = 'S' AND [name] = 'arulmouzhi' )
	BEGIN
		CREATE USER arulmouzhi FROM LOGIN arulmouzhi;
	END
ELSE
	BEGIN
		SELECT 'User_Name Already exists' AS [STATUS] ;
	END;

--### ROLE SCRIPT -- need to be created at particular db
IF NOT EXISTS ( SELECT [name] FROM [sys].[database_principals] WHERE [name] = 'Developer' ) 
	BEGIN 
		CREATE ROLE [Developer] AUTHORIZATION db_securityadmin ;
	END;

--#### PERMISSION -- need to be created at particular db

GRANT CREATE PROCEDURE TO [Developer] ;
GRANT CREATE FUNCTION TO [Developer] ;
GRANT CREATE VIEW TO [Developer] ;
GRANT CREATE TABLE TO [Developer] ;
GRANT SELECT, INSERT, UPDATE, DELETE, ALTER, EXECUTE, VIEW DEFINITION ON SCHEMA::dbo TO [Developer] ;
GRANT SHOWPLAN TO [Developer] ;

-- SP Lists (Developer)
GRANT SELECT ON OBJECT::[dbo].[tvf] TO [Developer];
GRANT EXECUTE ON OBJECT::[dbo].[udf] TO [Developer];
GRANT EXECUTE ON OBJECT::[dbo].[sp] TO [Developer]; 

-- WAY 1
EXEC SP_ADDROLEMEMBER 'Developer','arulmouzhi' ;
GO
-- WAY 2	
EXEC SP_ADDROLEMEMBER 'db_owner','arulmouzhi' ;
GO	

-- TO Run the Script in particular DB. But Role should be already created.
CREATE OR ALTER TRIGGER DDL_Trg_DB_DenyDropTable_DEV
ON DATABASE 
FOR DROP_PROCEDURE, DROP_TABLE, DROP_FUNCTION, DROP_INDEX, DROP_VIEW, DROP_TRIGGER
AS 
BEGIN 
   IF IS_MEMBER('Developer') = 1 
   BEGIN 
       PRINT 'You are NOT authorized to drop a table,proc,view,function,index,trigger.' ;
       ROLLBACK TRAN;
   END; 
END;

/*
DISABLE TRIGGER DDL_Trg_DB_DenyDropTable_DEV ON DATABASE;
--DROP PROCEDURE dbo.sp1;
ENABLE TRIGGER DDL_Trg_DB_DenyDropTable_DEV ON DATABASE;
*/